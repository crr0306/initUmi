1、子组件布局 不写在父组件中，那是无效的
2、页面没有边框滚动
  overflow:hidden;
3、子组件在父组件中居中：
   display: flex;
   text-align: center;
   justify-content: center;
4、connect和dispatch要配合使用，否则无法获取props
  (1)function mapStateToProps(state) {
    const { list, total, page } = state.users;
    return {
      list,
      total,
      page,
      loading: state.loading.models.users,
    };
  }
  export default connect(mapStateToProps)(Users);
  其中：
  Users是自定义功能名字
  state.users:users是model中namespace
(2)
export default connect(({ global: { userInfo, message, notification } }) => {
    return {
        userInfo,
        message,
        notification
    };
})(Index);
5、Context.Consumer
使用Context提供的provider和consumer组件来实现跨层级的组件数据传递。
父组件：使用provider传递values
子组件：使用consumer来接受参数值
6、方法传递
将父组件中的方法通过props传递到子组件中；
执行的时候，先执行子组件中，通过子组件调用父组件方法；
父组件中的方式，对外发出请求；
7、modal弹框、确定框Popconfirm
8、model数据存储数据过程：
（1）通过dispatch 请求到model中的effects
（2）到mock中
（3）通过reducers中的save将数据存储到state中
（4）connect则将model中的state存储到当前组件props中
9、 model 中的 subscriptions 相当于一个监听器，可以监听路由变化，鼠标，键盘变化，服务器连接变化，状态变化等，
这样在其中就可以根据不同的变化做出相应的处理，在这个 subsriptions 中的方法名是随意定的，
每次变化都会一次去调用里面的所有方法。
10、link传参数问题
11、createClass：
classnames组件通过透出一个对象来动态配置类名,不同的名字可以显示不同的样式。对象的key值为类名，value为boolean，表示是否应用这个类名。

   var btnClass = classNames({
      'btn': true,
      'btn-pressed': this.state.isPressed,
      'btn-over': !this.state.isPressed && this.state.isHovered
    });
12、赋值
   this.setState({
            searchData: dataSource,
        });
    
13、AutoComplete
const options = dataSource.map(opt => (
  <Option key={opt.title} value={opt.title}>
    {opt.title}
    <span className="certain-search-item-count">{opt.count} 人 关注</span>
  </Option>
));
 dataSource={options}

 onSearch：输入内容的时候会调用
 onSelect:选择内容
 onchange:输入框实时内容
 问题1：点击能跳转
 问题2：回车跳转
 问题3：匹配上后自动选择
 问题4：自动匹配：filterOption

 执行顺序：onclick --onchange--onselect or  onSearch

 14、select 中optionFilterProp="children"

 15、effects 有三个参数：https://blog.csdn.net/ohmyauthentic/article/details/53543441
 16、跨越问题：  credentials: 'same-origin'

 17、locale :
 https://github.com/umijs/umi/issues/1675
 https://www.npmjs.com/package/umi-plugin-locale?activeTab=readme

18、componentDidUpdate
每次调用setState()结束之后都会自动调用componentDidUpdate()钩子